#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 6/")
#Cargacmos el paquete necesario para poder utilizar el método Apriori:
install.packages("arules")
#Cargacmos el paquete necesario para poder utilizar el método Apriori:
library(arules)
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
transsacciones <- as(Dataset, "transactions")
#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 3/")
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
compra <- load("compra.RData")
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
transacciones <- as(compra, "transactions")
#Cargamos el dataset que vamos a utilizar:
compra <- load("compra.RData")
#Cargamos el dataset que vamos a utilizar:
load("compra.RData")
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
transacciones <- as(compra, "transactions")
View(transacciones)
#Aplicamos el método apriori cambiando el parámetro de confianza a 0.9 (0.8 es el valor por defecto)
reglas <- apriori(transacciones, parameter = list(support = 0.1, confidence = 0.80))
View(reglas)
#Ordenamos las reglas de mayor a menor confianza:
reglas.ordenadas <- sort(reglas, by = "confidence")
#Transformamos el objeto reglas ordenadas en data.frame:
reglas.ordenadas.dataframe <- as(reglas.ordenadas, "data.frame")
View(reglas.ordenadas.dataframe)
#Aplicamos el método apriori cambiando el parámetro de confianza a 0.9 (0.8 es el valor por defecto)
reglas <- apriori(transacciones, parameter = list(support = 0.1, confidence = 0.90))
#Ordenamos las reglas de mayor a menor confianza:
reglas.ordenadas <- sort(reglas, by = "confidence")
#Transformamos el objeto reglas ordenadas en data.frame:
reglas.ordenadas.dataframe <- as(reglas.ordenadas, "data.frame")
#Exploramos el resultado:
reglas.ordenadas.dataframe
#Cargamos el paquete necesario para poder realizar el algoritmo de PageRank:
install.packages("igraph")
#Cargamos el paquete necesario para poder realizar el algoritmo de PageRank:
library(igraph)
#Establecemos directorio de trabajo:
#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 6/")
#Cargamos el dataset con el que trabajaremos:
load("conoce.csv")
#Cargamos el dataset con el que trabajaremos:
Dataset <- read.csv2("conoce.csv", header=TRUE,encoding="latin1")
#Es neceario convertir el dataframe que queremos analizar en un objeto "grafo"
grafo <- graph.data.frame(Dataset)
View(Dataset)
#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 6/")
#Cargamos el dataset con el que trabajaremos:
Dataset <- read.csv2("conoce.csv", header=TRUE,encoding="latin1")
#Es neceario convertir el dataframe que queremos analizar en un objeto "grafo"
grafo <- graph.data.frame(Dataset)
#Establecemos una semilla para la reproducibilidad de los resultados:
set.seed(123)
#Ploteamos el grafo:
plot(grafo)
#Calcular el índice de PageRank:
I <- page.rank(grafo)
I
rev(sort(I$vector)) #Ordenar de forma decreciente
#Ploteamos de nuevo y redimensionamos los nodos en función del índice de PageRank:
#Aquellos nodos más grandes son más importantes en relación a PageRank:
plot(grafo, vertex.size=I$vector*200)
#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 6/")
#Cargamos el dataset que vamos a utilizar:
load("titanic.RData")
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
transacciones <- as(compra, "transactions")
#Es necesario transformar el dataset a analizar en un objeto de clase "transactions". Para ello:
transacciones <- as(titanic, "transactions")
#Aplicamos el método apriori cambiando el parámetro de confianza a 0.9 (0.8 es el valor por defecto)
reglas <- apriori(transacciones, parameter = list(support = 0.1, confidence = 0.80, lift = 1.20))
#Aplicamos el método apriori cambiando el parámetro de confianza a 0.9 (0.8 es el valor por defecto)
reglas <- apriori(transacciones, parameter = list(support = 0.1, confidence = 0.80))
#Ordenamos las reglas de mayor a menor confianza:
reglas.ordenadas <- sort(reglas, by = "lift")
#Transformamos el objeto reglas ordenadas en data.frame:
reglas.ordenadas.dataframe <- as(reglas.ordenadas, "data.frame")
#Exploramos el resultado:
reglas.ordenadas.dataframe
#Exploramos el resultado:
reglas.ordenadas.dataframe
View(titanic)
#Cargamos el paquete necesario para poder realizar el algoritmo de PageRank:
library(igraph)
#Establecer directorio de trabajo:
setwd("/Users/jlsovaz/Desktop/curso_data_mining/TEORIA/UNIDAD 6/")
#Cargamos el dataset con el que trabajaremos:
Dataset <- read.csv2("futbol.csv", header=TRUE,encoding="latin1")
#Es neceario convertir el dataframe que queremos analizar en un objeto "grafo"
grafo <- graph.data.frame(Dataset)
#Establecemos una semilla para la reproducibilidad de los resultados:
set.seed(123)
#Ploteamos el grafo para visualizar todas las relaciones de i conoce a j
plot(grafo)
#Calcular el índice de PageRank:
I <- page.rank(grafo)
I
rev(sort(I$vector)) #Ordenar de forma decreciente
#Ploteamos de nuevo y redimensionamos los nodos en función del índice de PageRank:
#Aquellos nodos más grandes son más importantes en relación a PageRank:
plot(grafo, vertex.size=I$vector*200)
View(grafo)
View(Dataset)
